<?php

use App\Models\Competition;
use App\Models\CompetitionParticipantsResults;
use App\Models\EliminatedCheatingParticipants;
use App\Models\Participants;
use Illuminate\Database\Migrations\Migration;
use Illuminate\Support\Facades\DB;

return new class extends Migration
{
    private array $indexes = [
        "055230001000", "055230001016", "055230006116", "055230006119", "055230006120",
        "055230006126", "055230006127", "055230006129", "055230006134", "055230006122",
        "055230006130", "055230008146", "055230008154", "055230008643", "055230008644",
        "055230008656", "055230009262", "055230009266", "055230007165", "055230007171",
        "055230007176", "055230007177", "055230007180", "055230007182", "055230007183",
        "055230007190", "055230007192", "055230007194", "055230007200", "055230007202",
        "055230007205", "055230007208", "055230007210", "055230007213", "055230007216",
        "055230007166", "055230007167", "055230007169", "055230007170", "055230007173",
        "055230007174", "055230007181", "055230007185", "055230007187", "055230007191",
        "055230007197", "055230007199", "055230007203", "055230007204", "055230007206",
        "055230007215", "055230007212", "055230008089", "055230008090", "055230007754",
        "055230007771", "055230000529", "055230000536", "055230007070", "055230007093",
        "055230006161", "055230006163", "055230003030", "055230003032", "055230003033",
        "055230003034", "055230008699", "055230008723", "055230011024", "055230011036",
        "055230011301", "055230011061", "055230011085", "055230011094", "055230011126",
        "055230011132", "055230011337", "055230011396", "055230011557", "055230011174",
        "055230011248", "055230011181", "055230011344", "055230011259", "055230011324",
        "055230011361", "055230011463", "055230011409", "055230011416", "055230011467",
        "055230011472", "055230011521", "055230011529", "055230011547", "055230011602",
        "055230011075", "055230011161", "055230011218", "055230011281", "055230011114",
        "055230011307", "055230011167", "055230011249", "055230011325", "055230011380",
        "055230011468", "055230011585", "055230011600", "055230011631", "055230011066",
        "055230011412", "055230011507", "055230011097", "055230011449", "055230011538",
        "055230011107", "055230011128", "055230011191", "055230011305", "055230011159",
        "055230011284", "055230011357", "055230011527", "055230011183", "055230011256",
        "055230011567", "055230011201", "055230011560", "855230001626", "855230001628",
        "855230001629", "855230001630", "855230001627", "855230001676", "855230001677",
        "855230001679", "855230001595", "855230001597", "855230001606", "855230001599",
        "855230001600", "855230001602", "855230001604", "855230001610", "855230001623",
        "855230001624", "855230001619", "855230001625", "091230000181", "091230000182",
        "060230009493", "060230009499", "060230009501", "060230009505", "060230014091",
        "060230014109", "060230008757", "060230008778", "060230009481", "060230009482",
        "060230008775", "060230008779", "060230013094", "060230013194", "060230008460",
        "060230008466", "060230008454", "060230008459", "060230008463", "060230006246",
        "060230006260", "060230006271", "060230006209", "060230006283", "060230006232",
        "060230006234", "060230007681", "060230007891", "060230010119", "060230010135"
    ];

    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        DB::transaction(function(){
            $competitionId = 61;
            $competition = Competition::find($competitionId);
            $awardRank = 6;
            $award = "CERTIFICATE OF PARTICIPATION";
            foreach ($this->indexes as $index) {
                $participant = $competition->participants()->where('index_no', $index)->first();
                $levelId = $competition->levels()
                    ->whereJsonContains('competition_levels.grades', $participant->grade)
                    ->value('competition_levels.id');
    
                $groupId = $competition->groups()
                    ->join('competition_marking_group_country as cmgc', 'competition_marking_group.id', 'cmgc.marking_group_id')
                    ->where('cmgc.country_id', $participant->country_id)
                    ->value('competition_marking_group.id');
    
                CompetitionParticipantsResults::where('participant_index', $participant->index_no)
                    ->delete();

                CompetitionParticipantsResults::create([
                    'participant_index' => $participant->index_no,
                    'level_id'          => $levelId,
                    'group_id'          => $groupId,
                    'award'             => $award,
                    'ref_award'         => $award,
                    'award_rank'        => $awardRank,
                ]);

                $eliminationRecord = EliminatedCheatingParticipants::where('participant_index', $participant->index_no)
                    ->first();

                $participant->status = 'iac';
                $participant->eliminated_at = $eliminationRecord?->created_at;
                $participant->eliminated_by = $eliminationRecord?->created_by;
                $participant->save();
            }
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        //
    }
};
