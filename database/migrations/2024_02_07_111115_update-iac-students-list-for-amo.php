<?php

use App\Models\Competition;
use App\Models\CompetitionParticipantsResults;
use App\Models\EliminatedCheatingParticipants;
use Illuminate\Database\Migrations\Migration;
use Illuminate\Support\Facades\DB;

return new class extends Migration
{
    private array $indexes = ["994230006763", "994230006769", "994230003996", "994230005626", "994230007400", "994230007401", "994230005884", "994230005886", "994230006329", "994230006333", "994230006334", "994230006335", "994230006338", "994230006339", "994230006340", "994230006351", "994230006353", "994230006355", "994230006356", "994230006489", "994230006490", "020231000099", "020231000027", "020231000118", "020231000112", "020231000128", "020231000126", "020231000097", "020231000114", "020231000098", "020231000115", "020231000120", "020231000119", "020231000100", "020231000124", "020231000102", "020231000005", "020231000006", "020231000007", "020231000008", "020231000009", "020231000011", "020231000013", "020231000015", "020231000017", "020231000018", "020231000019", "020231000020", "020231000023", "020231000024", "020231000025", "020231000026", "020231000028", "020231000029", "020231000032", "020231000033", "020231000036", "020231000039", "020231000040", "020231000041", "020231000042", "020231000043", "020231000129", "233230000841", "233230000834", "233230000878", "233230000871", "233230000873", "233230000872", "233230000875", "233230000876", "233230000879", "233230000882", "091231003634", "091231003635", "091231004353", "091231004356", "098231003633", "098231003642", "996230000572", "996230000564", "996230000822", "996230000820", "996230001154", "996230001150", "996230000582", "996230000580", "996230001182", "996230001180", "996230000433", "996230000430", "996230001323", "996230000967", "996230000782", "996230000778", "976230001376", "092230002811", "092230002810", "092230002813", "092230002812", "092230002814", "092230002815", "092230002871", "092230002872", "092230002874", "092230002875", "092230002873", "092230002878", "092230002879", "092230002882", "092230002876", "092230002880", "092230002884", "092230002877", "092230002881", "092230002883", "092230002870", "092230002885", "092230002886", "092230002887", "092230002910", "092230002906", "092230003512", "092230003146", "092230003926", "092230003378", "092230003376", "092230003620", "092230003619", "092230003621", "092230003622", "092230003623", "092230003624", "092230003625", "092230003626", "092230003629", "092230003630", "092230003631", "092230003632", "092230003633", "092230003628", "092230003627", "092230003664", "092230003662", "092230003668", "092230003669", "092230003670", "092230003663", "092230002823", "092230002822", "092230002844", "092230002843", "092230002845", "092230002846", "092230002847", "092230002848", "092230002849", "092230002850", "092230003145", "092230003143", "092230003147", "092230003635", "092230003634", "092230003636", "092230003637", "092230003638", "092230003639", "092230003641", "092230003642", "092230003643", "092230003644", "092230003645", "092230003646", "092230003647", "092230003887", "092230003679", "092230003677", "092230003727", "092230003726", "092230003728", "092230003729", "092230003731", "092230003733", "092230003737", "092230003732", "092230003730", "092230002825", "092230002820", "092230002851", "092230002854", "092230002855", "092230002856", "092230002857", "092230002853", "092230002852", "092230002924", "092230002923", "092230003137", "092230003136", "092230003138", "092230003139", "092230003140", "092230003141", "092230003210", "092230003208", "092230003331", "092230003329", "092230003330", "092230003399", "092230003404", "092230003405", "092230003406", "092230003402", "092230003486", "092230003489", "092230003481", "092230003484", "092230003482", "092230003488", "092230003490", "092230003938", "092230003937", "092230002859", "092230002858", "092230002860", "092230003359", "092230003358", "092230003492", "092230003485", "092230002862", "092230002861", "092230002863", "092230002864", "092230003238", "092230003236", "092230003239", "092230003237", "092230003307", "092230003306", "092230003308", "092230003327", "092230003326", "092230003328", "092230003380", "092230003379", "092230003381", "092230003385", "092230003383", "092230003386", "092230003505", "092230003491", "092230003487", "092230003526", "092230003521", "092230003508", "092230002980", "092230002992", "092230002982", "092230002988", "092230002983", "092230003537", "092230003540", "092230003542", "092230003541", "092230003534", "092230003547", "092230003552", "092230003553", "092230003543", "092230003545", "092230003550", "092230003551", "092230003538", "092230003535", "092230003539", "092230003549", "092230003544", "092230003890", "092230003798", "092230003794", "092230003961", "092230003963", "092230003960", "092230003135", "092230003134", "092230003369", "092230003366", "092230003565", "092230003554", "092230003566", "092230003555", "092230003559", "092230003556", "092230003564", "092230003568", "092230003569", "092230003572", "092230003558", "092230003557", "092230003198", "092230003193", "092230003195", "092230003199", "092230003388", "092230003392", "092230003390", "092230003389", "092230003574", "092230003576", "092230003580", "092230003575", "092230003582", "092230003577", "092230003588", "092230003579", "092230003578", "092230003593", "092230003587", "092230003581", "092230003589", "092230003596", "092230003583", "092230003586", "092230003594", "092230003584", "092230003592", "092230003591", "092230003900", "092230003899", "092230003901", "092230003169", "092230003168", "092230003170", "092230003171", "092230003343", "092230003337", "092230003344", "092230003341", "092230003603", "092230003599", "092230003618", "092230003610", "092230003602", "092230003617", "092230003605", "092230003604", "092230003607", "092230003611", "092230003608", "092230003612", "092230003609", "092230003616", "092230003922", "092230003916", "092230003920", "092230003918", "092230003921", "092230003919", "092230003925", "092230003177", "092230003172", "092230003178", "092230003176", "092230003182", "092230003179", "092230003175", "092230003180", "092230003181", "092230003184", "092230003188", "092230003185", "092230003513", "092230003186", "092230003183", "092230003187", "092230003312", "092230003311", "066231001077", "066231001073", "001230001946", "001230001943", "001230002113", "001230002093", "998230001776", "998230002083", "084231001014", "084231001020", "084231001137", "084231001169", "084231001203", "084231001226", "084231001903", "084231001940", "084231002329", "084231002332", "084231002494", "084231002543", "084231002690", "084231002709", "084231003891", "084231003901", "084231003183", "084231003185", "084231003197", "084231003228", "084231003280", "084231003302"];

    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        DB::transaction(function(){
            $competitionId = 66;
            $competition = Competition::find($competitionId);
            $awardRank = 6;
            $award = "CERTIFICATE OF PARTICIPATION";
            foreach ($this->indexes as $index) {
                $participant = $competition->participants()->where('index_no', $index)->first();
                $levelId = $competition->levels()
                    ->whereJsonContains('competition_levels.grades', $participant->grade)
                    ->value('competition_levels.id');
    
                $groupId = $competition->groups()
                    ->join('competition_marking_group_country as cmgc', 'competition_marking_group.id', 'cmgc.marking_group_id')
                    ->where('cmgc.country_id', $participant->country_id)
                    ->value('competition_marking_group.id');
    
                CompetitionParticipantsResults::where('participant_index', $participant->index_no)
                    ->delete();

                CompetitionParticipantsResults::create([
                    'participant_index' => $participant->index_no,
                    'level_id'          => $levelId,
                    'group_id'          => $groupId,
                    'award'             => $award,
                    'ref_award'         => $award,
                    'award_rank'        => $awardRank,
                ]);

                $eliminationRecord = EliminatedCheatingParticipants::where('participant_index', $participant->index_no)
                    ->first();

                $participant->status = 'iac';
                $participant->eliminated_at = $eliminationRecord?->created_at;
                $participant->eliminated_by = $eliminationRecord?->created_by;
                $participant->save();
            }
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        //
    }
};
